//¬p ∨ ¬q     and     ¬(p ^ q)

//prove equivalence

//proof 1
/*
¬p ∨ ¬q ⊢ ¬(p ^ q)
{
    1. !p V !q              premise
    2. { //Use !i pattern to prove !(p V q)
        3. p ^ q            assume
        4. p                ^e1 3
        5. q                ^e2 3
        //No obvious path, try Ve on premise
        6. {
            7. !p           assume
            8. _|_          !e 4 7
            //Goal: _|_
        }
        9. {
            10. !q          assume
            11. _|_         !e 5 10
            //Goal: _|_
        }
        12.  _|_            Ve 1 6 9
        //Goal: _|_
    }
    13. !(p ^ q)            !i 2
}
*/
//proof 2
¬(p ^ q) ⊢ ¬p ∨ ¬q
{
    1. !(p ^ q)             premise
    //No obvious pattern, try pbc on goal conclusion
    2. {
        3. !(!p V !q)       assume

        //No obvious way to get p, try pbc

        //Try to get: p ^ q, would _|_ with premise
        //First: try to prove p
        //Second: try to prove q
        //Goal: _|_

        4. {
            5. !p           assume
            6. !p V !q      Vi1 5
            7. _|_          !e 6 3
            //Goal: _|_
        }
        8. p                pbc 4
        9. { //using pbc
            10. !q          assume
            11. !p V !q     Vi2 10
            12. _|_         !e 11 3
        }
        13. q               pbc 9
        14. p ^ q           ^i 8 13
        15. _|_             !e 14 1
    }
    16. !p V !q             pbc 2
}