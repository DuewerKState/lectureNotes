HW 7 is due tonight

HW 8 will be posted after class

////////////////////////////////////

Today:
- more with induction
- recursive definitions
- direct proofs

////////////////////////////////////

Idea of mathematical induction, again.


Goal: prove a claim P(n) holds for all natural numbers (or similar) n

The induction domino effect:

    P(1) ∧ ∀ k (P(k) → P(k+1)) → ∀ n P(n)


What is this saying?

P(1): base case. Prove the claim for the first value in our domain
    (usually n = 1)

∀ k (P(k) → P(k+1)): for all k, if P(k) holds then P(k+1) holds.

subproof, introduce random individual. Assume P holds for our
random individual, prove P holds for the next individual.


How does this motivate our induction proofs?





////////////////////////////////////

Induction template.



Let P(n) be a claim about each natural number, n.

How to prove it with mathematical induction?

    P(1) ∧ ∀ k (P(k) → P(k+1)) → ∀ n P(n)



Base case? proving P(1) -- that our claim for the first

Inductive step? Assume that P(k) holds where k is a fixed
(whatever our domain is). We must prove that P(k+1) hold.



Conclusion? ∀ n P(n) (for all n in our domain, P(n) holds)




In BOTH parts: use words to explain your reasoning.
Someone unfamiliar with the proof should be able to read
your argument and follow what you are doing.



//////////////////////////////////////

Let P(n) be the claim that for all nonnegative integers n:
    2^0 + 2^1 + ... + 2^n = 2^(n+1) - 1

We write:
    LHS(n) = 2^0 + 2^1 + ... + 2^n
    RHS(n) = 2^(n+1) - 1

To prove that P(n) holds for some nonnegative integer n, we must
show LHS(n) = RHS(n).

Prove using mathematical induction.

Base case. We must show that P(0) holds. We have that:
    LHS(0) = 2^0 = 1
And:
    RHS(0) = 2^(0+1) - 1 = 2^1 - 1 = 1
We have that LHS(0) = RHS(0), so P(0) holds.


Inductive step. We assume the inductive hypothesis, that
P(k) holds for some fixed nonnegative integer k. That is,
we assume that LHS(k) = RHS(k). We must show that P(k+1) holds,
that is, that LHS(k+1) = RHS(k+1). We have:
    LHS(k+1) = 2^0 + 2^1 + ... + 2^k + 2^(k+1)
            = LHS(k) + 2^(k+1)
            = RHS(k) + 2^(k+1)      //by the inductive hypothesis
            = 2^(k+1) - 1 + 2^(k+1)
            = 2*(2^(k+1)) - 1
            = 2^(k+2) -1
            = 2^((k+1)+1) - 1
            = RHS(k+1)

Thus LHS(k+1) = RHS(k+1) and so P(k+1) holds.


We have proved that for all nonnegative integers n, that
P(n) holds.


//////////////////////////////////////

Use mathematical induction to prove the claim:

    For all natural numbers n, n^3 - n is divisible by 3

Let P(n) be the claim that for some natural number n,
n^3 - n is divisible by 3.

Base case. We must prove that P(n) holds for our smallest natural
number n, which is n = 1. We have that:
    1^3 - 1 = 0
Since 0 is divisible by 3, P(1) holds.


Inductive step. We assume the inductive hypothesis -- that
P(k) holds for some fixed natural number k. That is, we assume that
k^3 - k is divisible by 3. We must show that P(k+1) holds -- that
is, that (k+1)^3 - (k+1) is divisible by 3.

We have that:
    (k+1)^3 - (k+1) = (k+1)((k+1)^2 - 1)
                    = (k+1)(k^2 + 2k + 1 - 1)
                    = (k+1)(k^2 + 2k)
                    = k^3 + 2k^2 + k^2 + 2k
                    = k^3 + 3k^2 + 2k
                    = (k^3 - k) + 3k^2 + 3k
                    = (k^3 - k) + 3(k^2 + k)

 We know k^3 - k is divisible by 3 from our inductive hypothesis.
 Additionally, 3(k^2 + k) is divisible by 3 because 3 is a factor.
 The sum of factors that are divisible 3 is itself divisible by
 3. Thus (k+1)^3 - (k+1) is divisible by 3, and so P(k+1) holds.


 We have shown that for all natural numbers n, P(n) holds.


///////////////////////////////////////

Recursively defined functions.


To define a function whose domain is the set of natural numbers
(or some other set of integers with a lowest value)

Base case: Specify the value of the function at 1 (or some other
    lowest value). (There may be more than one base case.)


Recursive step: Give a rule for finding the value of the function
    at all bigger integers (give a range) from its smaller values




//////////////////////////////////

Example (domain: all natural numbers, 1 and up):

f(1) = 3
f(n) = 2f(n-1) + 3, for n > 1


What is f(3)?

f(3) = 2f(2) + 3 = 2*9 + 3 = 21

f(2) = 2f(1) + 3 = 2*3 + 3 = 9




//////////////////////////////////

What does this define?

g(1) = 1
g(n) = n * g(n-1), for n > 1

1, 2, 6, 24, ...


//////////////////////////////////

Consider this pattern: 1, 2, 4, 7, 11, 16, 22, ...

Write a recursive definition.

f(1) = 1
f(n) = f(n-1) + (n-1), n > 1


////////////////////////////////

Recursively defined sets:


Consider the subset S of the set of integers, defined as:

Base case: 1, 2 ∈ S

Recursive case: If x ∈ S and y ∈ S, then xy ∈ S

--> what are the elements in S?

S = {1, 2, 4, 8, 16, ...}

all the powers of 2

S = {x : x = 2^k, k ∈ Z, k >= 0}


////////////////////////////////

∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

/////////////////////////////////

Now we will look at more informal proofs.

--> why? (prove programs are correct, prove running time of programs,
    prove systems are secure, make AI inferences, prove specifications
    are consistent, etc.)

///////////////////////////////

Definitions.


An integer n is *even* if n = 2k for some k ∈ ℤ.



An integer n is *odd* if n = 2k + 1 for some k ∈ ℤ.



Any integer that is not odd is even,
and any integer that is not even is odd.


///////////////////////////////

Direct (conditional) proof


- Often want to prove things of the form: "If P, then Q"

--> how would we do this with natural deduction?


Assume P.
...
Q.


/////////////////////////////

Direct proof template. If P, then Q

Assume P
...
Q





/////////////////////////////

Example: prove that the product of two even integers is even.

If x and y are even integers, then xy is even.

If our domain is integers and we have the predicate Even(x), how
would you write this statement in predicate logic?

∀ x ∀ y (Even(x) ^ Even(y) -> Even(xy))

Have 2 random individuals. Assume they are both even.
Trying to show that their product is even.


Let x and y be even integers. If x is even, then x = 2k for
some integer k. Similarly, if y is even, then y = 2m for some
integer m. We have that:
    xy = (2k)(2m)
        = 4km
        = 2(2km)

We have that xy = 2b where b is the integer 2km. Thus xy is even
by definition.

(want: xy is even. xy = 2(some integer))



--> How is our proof similar to natural deduction?

//////////////////////////////

∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

//////////////////////////////

Example.

The square of any odd integer is odd.

How can we write this in predicate logic?

∀ x (Odd(x) -> Odd(x^2))



Let x be an odd integer. If x is odd, then x = 2k + 1 for
some integer x. We have that:

    x^2 = (2k + 1)^2
        = 4k^2 + 4k + 1
        = 2(2k^2 + 2k) + 1

So x^2 = 2b + 1 where b is the integer 2k^2 + 2k. Thus x^2 is
odd by definition.

////////////////////////////////

Next time:
- more types of proofs
