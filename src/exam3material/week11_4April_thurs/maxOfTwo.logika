import org.sireum.logika._

val a: Z = readInt("Enter first number: ")
val b: Z = readInt("Enter second number: ")

var max: Z = 0

if (a > b) {
    max = a

    l"""{
        1. max == a         premise //from assignment
        2. a > b            premise //condition is true
        3. max >= a         algebra 1 //needed for assert
        4. max >= b         algebra 2 3//needed ofr assert
    }"""
} else {
    max = b

    l"""{
        1. max == b         premise //from assignment
        2. !(a > b)         premise //condition is false
        3. a <= b           algebra 2
        4. max >= b         algebra 1 //needed for assert
        5. max >= a         algebra 3 4 //needed for assert
    }"""
}

l"""{
    //max >= a
    //max >= b
    1. max >= a             premise //true in both branches
    2. max >= b             premise //true in both branches
  //3. max == a ^ max == b  premise //LHS of if, RHS of else
    3. max >= a ^ max >= b  ^i 1 2

}"""

//write assert that we have found the max
assert(max >= a & max >= b)
assert(max == a | max == b)
//do the verification